# Generated by Django 5.1.5 on 2025-02-24 17:42

import re

import requests
from bs4 import BeautifulSoup
from django.db import migrations, models
from ratelimit import limits, sleep_and_retry

MAX_CALLS = 2
ONE_SECONDS = 1


@sleep_and_retry
@limits(calls=MAX_CALLS, period=ONE_SECONDS)
def scrape_letterboxd_film_page(url: str):
    try:
        response = requests.get(url)
        response.raise_for_status()
        soup = BeautifulSoup(response.text, "html.parser")
        # Extract the Letterboxd filmId
        script_tag = soup.find("script", string=re.compile("data.production.filmId"))
        if not script_tag:
            raise ValueError("Could not find the filmId in the page script.")
        film_id_match = re.search(r"data\.production\.filmId\s*=\s*(\d+);", script_tag.string)
        if not film_id_match:
            raise ValueError("Could not extract filmId from script.")
        letterboxd_id = film_id_match.group(1)
        return letterboxd_id
    except requests.exceptions.RequestException as e:
        print(f"Could not get page {url}: {e}")
    except Exception as e:
        print(e)


def populate_letterboxd_id(apps, schema_editor):
    Film = apps.get_model("films", "Film")
    films = Film.objects.all()
    total_films = films.count()
    for index, film in enumerate(films, start=1):
        try:
            letterboxd_id = scrape_letterboxd_film_page(film.letterboxd_url)
            film.letterboxd_id = letterboxd_id
            film.save()
            print(f"{index}/{total_films}: Updated film {film} with Letterboxd ID {letterboxd_id}")
        except Exception as e:
            print(f"Error updating film {film}: {e}")


class Migration(migrations.Migration):
    dependencies = [
        ("films", "0009_alter_filmsession_datetime_and_more"),
    ]

    operations = [
        migrations.RenameField(model_name="film", old_name="letterboxd", new_name="letterboxd_url"),
        migrations.AddField(
            model_name="film",
            name="letterboxd_id",
            field=models.PositiveIntegerField(blank=True, null=True, unique=True),
        ),
        migrations.RunPython(populate_letterboxd_id, reverse_code=migrations.RunPython.noop),
    ]
